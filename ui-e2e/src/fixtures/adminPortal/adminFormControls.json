{
  "adminFormControls": {
    "buttons": {
      "manageSignInSecurity": "//button[@aria-label='Manage Sign In Security']",
      "manageSubscriptions": "//*[@aria-label='Manage Subscriptions']",
      "manageIntegrations": "//*[@aria-label='Manage Integrations']",
      "manageDivisionsAndLocations": "//*[@aria-label='Manage Divisions and Locations']",
      "manageCarriers": "//*[@aria-label='Manage Carriers']",
      "manageCostAccounts": "//*[@aria-label='Manage Cost Accounts']",
      "manageAddressBook": "//*[@aria-label='Manage Address Book']",
      "manageRoles": "//*[@aria-label='Manage Roles']",
      "manageUsers": "//*[@aria-label='Manage Users']",
      "manageProducts": "//*[@aria-label='Manage Products']",
      "manageBusinessRules": "//*[@aria-label='Manage Business Rules']",
      "manageNotificationsAndTemplates": "//*[@aria-label='Manage Notifications and Templates']",
      "navigateToPlatformTab": "//*[@class='navbar-nav']//*[contains(text(),'Platform')]",
      "manageEnterprises": "//*[@aria-label='Manage Enterprises']",
      "manageAdminUsers": "//*[@aria-label='Manage Admin User']",
      "createNewEnterprise": "//*/button[contains(text(),'Create New Enterprise')]",
      "addUser": "//*/button[contains(text(),'Add User')]",
      "saveAndCloseInModal": "//mat-dialog-actions//*[contains(text(),'Save and Close')]",
      "saveAndAddAnotherInModal": "//mat-dialog-actions//*[contains(text(),'Save and Add Another')]",
      "companyLogo": "//*[contains(@class,'navbar')]//*[contains(@href,'/')]",
      "navigateToClientSetupTab": "//*[@class='navbar-nav']//*[contains(text(),'Client Setup')]",
      "navigateToOnboardingTab": "//*[@class='navbar-nav']//*[contains(text(),'On-Boarding')]",
      "navigateToSupportTab": "//*[@class='navbar-nav']//*[contains(text(),'Support')]",
      "addRoleTemplate": "//*/button[contains(text(),'Add Role Template')]",
      "manageRoleTemplates": "//*[@aria-label='Manage Role Templates']",
      "totalCountOfRoletemplate": "//*/div[@class='mat-tab-label-content']",
      "managePlanDefinition": "//*[@aria-label='Manage Plan Definition']",
      "addPlanDefinition": "//*/button[contains(text(),'Add Plan')]",
      "deleteButtonInsideModal": "//*/span//*[contains(text(),'Delete')]",
      "addIntegrator": "//*/button[contains(text(),'Add Integrator')]",
      "manageAccessRequests": "//*[@aria-label='Manage Access Requests']",
      "addIntegrationsInClientSetup": "//*/button[contains(text(),'Add Integration')]",
      "addDivisionInClientSetup": "//*/button[contains(text(),'Add Division')]",
      "addCarrierInClientSetup": "//*/button[contains(text(),'Add Carrier')]",
      "addCostAccountsInClientSetup": "//*/button[contains(text(),'Add Account')]",
      "addAddressBookInClientSetup": "//*/button[contains(text(),'Add Contact')]",
      "addRolesInClientSetup": "//*/button[contains(text(),'Add Subscription Role')]",
      "addUsersInClientSetup": "//*/button[contains(text(),'Add User')]",
      "addProductsInClientSetup": "//*/button[contains(text(),'Add Product')]",
      "addBusinessRulesInClientSetup": "//*/button[contains(text(),'Add Ruleset')]",
      "addNotificationInClientSetup": "//*/button[contains(text(),'Add Notification')]",
      "addCustomFieldsInClientSetup": "//*/span[contains(text(),'Use Custom Fields')]/../../../mat-radio-button[contains(@class,'mat-radio-checked')]",
      "manageIntegrators": "//*[@aria-label='Manage Integrators']",
      "manageCustomFields": "//*[@aria-label='Manage Custom Fields']",
      "addLocationInClientSetup": "#add-location",
      "locationNameTxtBox": "#namelocation",
      "okButtonInInstallerModal": "//span[contains(text(), 'OK')]",
      "cancelButtonInInstallerModal": "//*[contains(text(), 'Cancel')]",
      "saveLocationButtonInModal": "#save-location",
      "deleteButtonInLocationModal": "//*/div[@class='modal-footer']//*[contains(text(),'Delete')]",
      "costAccounts_AddForm_Save": "spa-dialog-add-cost-account button.btn.btn-primary",
      "saveAndCloseButtonInAddContact": "#save-and-close-btn",
      "settingsMenuItems": "button[aria-label='Settings']",
      "manageUsersLink": "a[href='/client-admin/users']",
      "manageContacts": "a[href='/contacts']",
      "exportLocation": "#export-location",
      "addUserBtn": "#add-user",
      "addUserPopupCloseBtn": "div[class*='modal-header'] button[aria-label='Close']",
      "divisionLocLink": "a[routerlink='/client-admin/locations']",
      "divisionLocSideLink": "a[routerlink='/locations']",
      "CostAccSideLink": "a[routerlink='/cost-accounts']",
      "addDivisionBtn": "#add-division",
      "addLocationBtn": "#add-location",
      "importLocation": "#import-location",
      "locationImportSaveBtn": "#import-button",
      "locationExportBtn": "#export-location",
      "continueLocButton": "#continue-button",
      "deleteModalConfirmBtn": "spa-dialog-confirm button.btn.btn-primary",
      "importAccountButton": "#import-account",
      "progressBar": "div[role='progressbar']",
      "importProgressBar": "#import-progressbar",
      "closeBtn": "#cancle-button",
      "costAccImportBtn": "#import-btn",
      "costAccount_exportBtn": "#export-account",
      "costAccRefreshBtn": "#refresh-cost-account",
      "costAccountImport_SaveButton": "#btn-save-close",
      "saveSubscriptionButton": "#save-subscription",
      "editUserInAdminUserSearchPage": "#edit-user",
      "addCustomFieldsButton": "#add-custom-field",
      "addCustomFields_SaveButton": "#btn-save-close",
      "importContact": "#import-contact",
      "submitButton": "button[type='submit']",
      "dismissModalCssId": "#modalDismissButton",
      "closeModalButtonCss": "button.close",
      "closeModalButtonCss_2": "button[aria-label=Close]",
      "saveAndCloseButton": "#saveAndCloseButton",
      "continueButton": "#continue-btn",
      "saveAndCloseButton1": "#save-and-close-btn",
      "ManageSupportUsersLink": "#manage-support-users",
      "addProductUserLink": "#add-user",
      "btn_YesInNotificationIsolationAlert": "#close-2",
      "btn_CloseInNotification": "button[aria-label='Close']",
      "skipForNowBtnInPendoGuide": "//button[contains(text(),'Skip for Now')]",
      "deleteConfirm": "#close-2",
      "resetPasswordLink": "#reset-password",
      "closeIconInAlertModal": "#close-1",
      "closeButton": "button[class='mat-ripple close']",
      "closeBtnXpath": "//button[@class='mat-ripple close']",
      "deleteUserLink": "#delete-user",
      "deleteConfirmLink": "button[type=button].btn-primary span span",
      "addProductsId": "#addproduct",
      "buttonSave": "#button-save",
      "productTypeId": "#producttype",
      "selectLocId": "#locId",
      "expandRow": "//a[@aria-label='Expand row']",
      "exportUser": "#export-users",
      "downloadSampleFileLink": "i[class='pbi-icon-mini pbi-download mr-2']",
      "importUserBtn": "#import-user",
      "btnCancel": "#close-btn",
      "jobStatusInUsersPage": "#jobs-status-user",
      "jobIdColumnInJobStatusInUsersPage": "//td[contains(text(), 'Processed')]/..//td[2]",
      "exportFileDownloadInUserJobStatus": "//td[contains(text(), 'Processed')]/..//td//button",
      "downloadBtnInsideJobStatus": "button[id='close-2']",
      "downloadCostAccSampleFile": "i[class='pbi-icon-mini pbi-download mr-2']",
      "jobStatusBtnInCostAcc": "#jobs-status-cost-account",
      "drpdwnInsideJobStatus": "#filter-dropdown",
      "drpdwnText": "div[role='option'] span",
      "searchBarInJobStatus": "div[class='input-group'] input[placeholder='Search']",
      "jobIdColumnInJobStatus": "div[class*='search-results'] tbody tr td:nth-child(2)",
      "downloadLinkInsideJobStatus_ErrorFile": "td[class='text-right'] button i[class='pbi-icon-mini pbi-download']",
      "addSSOUserMapping": "//button[@id='add-sso-user-mapping']",
      "tabSSOUserMappings": "//div//*[contains(text(),'SSO Users Mappings')]",
      "searchByEmailbtn": "//button[@id='button-search']",
      "btnOK": "#close-2",
      "adminUserMappingClosebtn": "#user-close-button",
      "tabUsers": "//div//*[text() = 'Users']",
      "nonSSOUser": "//button[@id='add-user']",
      "saveButton": "//button[@id='btn-save-close']",
      "importSSOUserMappingBtn": "//button[@id='import-type']",
      "manualImport": "//a[@id='manual-import']",
      "importBtn": "//button[@id='import-button' and contains(text(), 'Import')]",
      "clearBtn": "//button[@id='button-search-clear']",
      "usersTab": "//div[@role='tab']//*[text()='Users']",
      "signInBtn": "div.signin-box > form > button",
      "ssoEmailNextBtn": "#okta-signin-submit",
      "ssoPasswordVerifyBtn": ".o-form-button-bar > input.button",
      "ssoUserProfileNameBtn": "ul.navbar-nav.navbar-right.ng-star-inserted > li > spa-menu-item-dropdown",
      "ssoUsersMappingEditBtn": "//button[@id='edit-user']",
      "okBtnInUsersTab": "//button[contains(text(), 'OK')]",
      "continueBtnInImport": "//button[contains(text(), 'Continue')]",
      "createShippingLabelsBtn": "//button[@id='create_shipping_label']",
      "shippingAndMailingBtn": "//button[@aria-label='Shipping & Mailing']",
      "updateAttributeMappingBtn": "//button[contains(text(), 'Update Attribute Mapping')]",
      "suggestedAddressOK": "//mat-dialog-container//*[contains(text(), 'OK')]",
      "agree": "//*/mat-dialog-container//*/button[contains(text(),'Agree')]",
      "ssoVerifyBtn": "//*[@value='Verify']"
    },
    "inputs": {
      "enterpriseName": "//*[@id='enterprise']",
      "placeholderSearch": "//input[@placeholder='Search']",
      "placeholderSearchByEmail": "//input[@placeholder='Search By Email']",
      "enterpriseId": "//*[@id='enterpriseID']",
      "firstName": "//*[@id='firstName']",
      "lastName": "//*[@id='lastName']",
      "email": "//*[@id='email']",
      "searchText": "//*[@id='searchText']",
      "searchEnterprisePlaceholder": "//*//input[@role='textbox']",
      "searchUser": "//input[@id='search-input']",
      "displayName": "//*[@id='name']",
      "description": "//*[@id='desc']",
      "selectEnterPriseInClientSetup": "//*[@class='ng-placeholder']/../../../../ng-select[@placeholder='Select Enterprise']",
      "divisionNameTxtBox": "#division",
      "locationAccountNumber": "#shipToBPN",
      "locationNameTxtBox": "#locationName",
      "companyName": "input[formcontrolname='company']",
      "addressLine1": "input[formcontrolname='addressLine1']",
      "postalCode": "input[formcontrolname='postalCode']",
      "contactDepartment": "ng-select[id='departmentID']",
      "contactDepartmentSelect": "//*/div/span[@class='ng-option-label ng-star-inserted']",
      "city": "input[formcontrolname='city']",
      "state": "div.form-group [formcontrolname='state']",
      "country": "select[formcontrolname='countryCode']",
      "phone": "input[formcontrolname='phone']",
      "costAccounts_AddForm_Name": "#accountName",
      "costAccounts_AddForm_Code": "#code",
      "costAccounts_AddForm_Description": "#description",
      "costAccounts_AddForm_ActiveRadioBtn": "mat-radio-button[value='active']",
      "costAccounts_AddForm_InactiveRadioBtn": "mat-radio-button[value='inactive']",
      "nameInAddContact": "#name",
      "companyInAddContact": "#company",
      "emailInAddContact": "#email",
      "phoneInAddContact": "#phone",
      "address1InAddContact": "#addressline1-autocomplete-input",
      "zipCode": "#postalCode0",
      "importFileInput": "input[type=file]",
      "nameField": "#name",
      "typeInAddNotification": "ng-select[bindvalue='applicationCategoryId'] input[aria-autocomplete='list']",
      "conditionInAddNotification": " ng-select[formcontrolname='notificationRuleID'] input[aria-autocomplete='list']",
      "scheduleInAddNotification": "ng-select[formcontrolname='defaultCronExpression'] input[aria-autocomplete='list']",
      "subjectInAddNotification": "#templateSubject",
      "codeInAddRuleset": "#code",
      "descriptionInput": "#description",
      "addRulesetDivisionLevel": "#accessLevel-division",
      "addRulesetLocationLevel": "#accessLevel-location",
      "customFieldInputInAddressBook": "#custom-field-value",
      "emailInAddUser": "#email",
      "displayNameInAdminAddUser": "#displayName",
      "serialNo": "#serialNumber",
      "ssoEmailId": "#userID",
      "searchByEmailFieldInSSOUSerMappingTab": "#search-input",
      "searchBarInJobStatus": "//mat-dialog-content//input[@id='search-input']",
      "uidInput": "//input[@id='uid']",
      "searchLocation": "//input[@id='searchlocationtext']",
      "searchEmailInSSO": "//input[@placeholder='Search Email']",
      "userName": "#username",
      "ssoEmailInput": "#okta-signin-username",
      "ssoPasswordInput": "//input[@type='password']",
      "oicdPasswordInput": "#input67",
      "password": "//input[@type='password']",
      "oidcCostAccountInput": "//input[@id='costAccount']",
      "locationAttributeInput": "//tbody/tr[5]//input",
      "roleAttributeInput": "//tbody/tr[6]//input",
      "costCenterAttributeInput": "//tbody/tr[7]//input",
      "defaultCostAccountInputInAddSSOUserMapping": "//*[@id='cost-account-list']//*[@aria-haspopup='listbox']/input"
    },
    "checkBox": {
      "activeUsers": "//*[contains(text(),'Active')]/..//*[@type='checkbox']",
      "pbSupport": "//*[contains(text(),'PB Support')]/..//*[@type='checkbox']",
      "pbOperator": "//*[contains(text(),'PB Operator')]/..//*[@type='checkbox']",
      "pbService": "//*[contains(text(),'PB Service')]/..//*[@type='checkbox']",
      "allowCustomEnterpriseId": "//*[contains(text(),'Custom Enterprise')]/..//*[@type='checkbox']",
      "searchEnterpriseCheckBox": "//*[contains(@class,'multiselect-item') and contains(@aria-label,'%s')]//*[contains(@class,'checkbox-box')]",
      "selectAllInRoleTemplate": "//*/div[contains(text(), 'Select All')]",
      "selectedCheckboxes": "//*/mat-pseudo-checkbox[contains(@class,'mat-pseudo-checkbox-checked')]",
      "installerCheckbox": "#installer-role-input",
      "carrierCheckbox": "span[class='mat-checkbox-label']",
      "emailCheckBoxInAddNotification": "#email-input",
      "showInactiveNotifications": "#inactive-notification-input",
      "rolesOptions": "//div[contains(@class, 'p-multiselect-items-wrapper')]//p-multiselectitem//*[contains(text(), '%s')]",
      "JITCheckbox": "//mat-checkbox[@id='allowUpdate']//*/input[@type='checkbox']",
      "JITCheckboxEnabled": "mat-checkbox[id='allowUpdate'] input[aria-checked='true']",
      "roleCheckbox": "//ul[@role='listbox']//*[@class='p-checkbox-box']"
    },
    "text": {
      "stampTexts": "//*[contains(@aria-live,'polite') and contains(@class,'table-details')]",
      "reportTexts": "//table[@role='table']//tbody//tr[1]",
      "availablePlanText": "//*[contains(text(),'Available Plans')]",
      "alertText": "//*[contains(text(),'Alert')]",
      "locationNameList": ".p-datatable-tbody > tr > td.td-name",
      "divisionNameList": ".p-datatable-tbody > tr > td.division-name",
      "subsRoleNameList": ".p-datatable-tbody > tr > td:nth-child(1)",
      "locationNameInUsersDetails": "//*[@id='location-list']/div/div//span[contains(@class, 'ng-value-label')]"
    },
    "radio": {
      "active": "//*/mat-radio-button//*[contains(text(),'Active')]",
      "inActive": "//*/mat-radio-button//*[contains(text(),'Inactive')]",
      "basicSupportrole": "#basic",
      "teamLeadSupportrole": "//input[@value='teamLead']",
      "inactiveId": "#INACTIVE-input",
      "activeId": "#ACTIVE",
      "notificationIsolation_NoRadioBtn": "#useIsolation mat-radio-button:nth-child(2)",
      "notificationIsolation_YesRadioBtn": "#useIsolation mat-radio-button:nth-child(1)",
      "inactiveRadioBtnInEditAdminUser": "mat-radio-button[value='false']",
      "checkInactiveRadioBtncheckedOrNot": "mat-radio-button[class='mat-radio-button mat-accent mat-radio-checked'][value='INACTIVE']",
      "basicClientSandboxRole": "mat-radio-group[formcontrolname='clientSandBoxStatus'] mat-radio-button[value='basic']",
      "adminAccessLevel": "//mat-radio-group[@id='admin-level-at']",
      "defaultAdminAccessLevel": "//mat-radio-group//*[@id='%s']",
      "suggestedAddress": "//*//mat-radio-button[@value='suggested']"
    },
    "validations": {
      "enterpriseName": "//*[@id='enterprise']/../p[contains(@class,'invalid')]",
      "enterpriseId": "//*[@id='enterpriseID']/../p[contains(@class,'invalid')]"
    },
    "dropdown": {
      "selectEnterprise": "//ng-select[@labelforid=\"Account\"]",
      "assignEnterprises": "//*[@formcontrolname='adminLevelEntity']",
      "assignEnterprisesInput": "//*[@formcontrolname='adminLevelEntity']//*/input",
      "dropdownText": "div[role=option]",
      "selectPlanInSubscription": "#plans-list",
      "dropDownTextOfSelectPlanDropdown": "li[class='p-multiselect-item p-ripple']>span",
      "locationAddDivisionDrpDown": "#divisionID .ng-arrow-wrapper",
      "addressLine1DropDownText": "mat-option[role=option]",
      "assignRole": "//*[@id='subscription-roles']",
      "assignRoleDropdown": "//*[@id='subscription-roles']//div[contains(@class, 'p-placeholder')]",
      "selectRole": ".p-multiselect-items-wrapper div div",
      "selectLocationDropdown": "//*[@id='location-list']",
      "selectLocationDrpDown": "//*[@id='location-list']/div",
      "selectLocation": "div[role='option'] div",
      "selectDivisionDrpDown": "#division-list",
      "selectDivision": "#division-list .p-checkbox-box:nth-child(2)",
      "selectAdminLocationDropdown": "#admin-entity-location-list",
      "selectAdminLocation": "#admin-entity-location-list div[role='option']:nth-child(1) div",
      "availablePlanListDropdown": "#plans-list",
      "availablePlanDropdownText": "li[class='p-multiselect-item p-ripple']>span",
      "oktaIdDropdown": "#oktaGroupID",
      "oktadropdownText": "div[role='option']>span",
      "selectEnterpriseInAdminUser": "div[class*='p-multiselect-label']",
      "customTypeDropdown": "#custom-type",
      "customTypeDrpdoownText": "div[role='option']>span",
      "customDropdownInAddressBook": "#custom-field",
      "dropdownTextList": "div[role='option']>span",
      "insertDataInAddNotification": "#insertdatafield",
      "typeDropdownInAddRule": "#type",
      "carrierDropdownInAddRuleset": "#carrier",
      "serviceLevelInAddRuleset": "#serviceId",
      "selectServiceDropdownText": "div[class*='ng-option-marked']",
      "accessLevelDivDropDown": "#accessLevel-division-dropdown",
      "customFieldHeaderInAddressBook": "label[for='custom-field']",
      "siteFilter": "ng-select[ngclass='site-filter']",
      "locationFilter": "ng-select[placeholder='Select Location']",
      "divisionFilterInNotification": "ng-select[ngclass='division-filter']",
      "locationFilterInNotification": "#location-list",
      "selectDivloclist": "div[role='option']",
      "selectAdminLocationByPosition": "#admin-entity-location-list div[role='option']:nth-child(%s) div",
      "selectEnterpriseInSandboxBasic": "//p-multiselect[@formcontrolname='rollupEntity']//*[contains(text(),'Select Enterprise(s)')]",
      "ssoUsersFilter": "//div[@class='ng-select-container']",
      "adminRolesDropdown": "//p-multiselect[@id='subscription-roles']//*[contains(@class, 'p-multiselect-label-container')]",
      "divisionDropdown": "//p-multiselect[@id='division-list']//*[contains(@class, 'p-multiselect-label-container')]",
      "importTypeDropdown": "#import-type",
      "importAutomatic": "#automatic-import",
      "importManaulCostAccount": "#manual-import",
      "costAccount_importBtn": "#import-account",
      "defaultCostAccount": "//*[@id='cost-account-list']//div[contains(@class, 'ng-star-inserted')]",
      "locationDropdown": "//ng-select[@id='admin-entity-location-list']",
      "selectDefaultCostAccountDropdown": "//ng-select[@id='cost-account-list']",
      "ssoDefaultCostAccount": "//ng-select[@formcontrolname='costAccount']//div[@class='ng-value-container']",
      "jobsHistory": "//*[@id='jobs-history']",
      "dropdownInsideJobStatus": "//*[@id='filter-dropdown']"
    },
    "staticElements": {
      "modal": "//*/mat-dialog-container",
      "modalHeader": "//*[@class='modal-header']",
      "spinnerIcon": "i[class*='pbi-icon-mini pbi-loader-circle']",
      "emailAccessRequests": "//*/th[contains(text(),'Email')]",
      "raisedOnAccessRequests": "//*/th[contains(text(),'Raised on')]",
      "tableGridRow": "table[role=table] tbody tr",
      "alertModalInInstaller": "//*[@role='dialog']/spa-dialog-confirm",
      "seletedPlansUnderDropdown": "p[class='text-break']",
      "successToastMessage": "div[aria-label='Subscription updated successfully']",
      "successMessageInCustomFields": "div[aria-label='Custom Field Created Successfully']",
      "progressBarInImportContact": "ngb-progressbar[class='progress']",
      "successMessageInImportContact": "div[aria-label='Total Records :1 Uploaded Records :1']",
      "toast": "//*[@id='toast-container']",
      "notificationGrid": "//*[@role='table']//tr[1]/td[1]/div",
      "ruleSetGrid": "//*[@role='table']//tr[1]/td[2]/div",
      "visibilitySectionInNotification": "mat-button-toggle-group[formcontrolname='notificationIsoOption']",
      "notificationStatusInGrid": "//*[@role='table']//tr[1]/td[7]/div",
      "successMessageInNotification": "div[aria-label='Notification Added successfully']",
      "emptyList": ".empty-state-list",
      "passwordResetToastMsg": "div[aria-label='Password reset and sent on email successfully']",
      "duplicateCostAccountErrorModal": "spa-dialog-confirm p",
      "errorModal": "spa-dialog-confirm p",
      "domainErrorMessage": "div[class*='invalid-feedback'] p",
      "defaultCostAccountLabel": "//div/label[contains(text(), 'Select Default Cost Account')]"
    },
    "condition": {
      "beVisible": "be.visible",
      "notBeVisible": "not.be.visible",
      "contains": "contains",
      "isEmpty": "isEmpty",
      "notContain": "not.contain",
      "exist": "exist",
      "notExist": "not.exist",
      "beDisabled": "be.disabled",
      "notBeDisabled": "not.be.disabled",
      "haveAttr": "have.attr",
      "and": "and",
      "include": "include",
      "notInclude": "not.include",
      "notHaveValue": "not.have.value",
      "haveValue": "have.value",
      "haveLength": "have.length",
      "notHaveClass": "not.have.class",
      "haveClass": "have.class",
      "stringNotEquals": "stringNotEquals",
      "stringEquals": "stringEquals",
      "unchecked": "unchecked",
      "checked": "checked"
    },
    "values": {
      "selectEnterpriseText": "Select Enterprise",
      "allowCustomEnterpriseId": "Allow Custom Enterprise Id",
      "pleaseEnterEnterpriseName": "Please enter enterprise name.",
      "enterpriseNameShouldBeMin2CharsLong": "Enterprise name should be min 2 characters long.",
      "pleaseEnterEnterpriseId": "Please enter enterprise id.",
      "pbService": "PB Service",
      "pbOperator": "PB Operator",
      "pbSupport": "PB Support",
      "active": "ACTIVE",
      "inactive": "INACTIVE",
      "assignedEnterprises_1": "Enterprises (1)",
      "assignedEnterprises_0": "Enterprises (0)"
    },
    "cssData": {
      "classOutOfService": "out-of-service",
      "reserved": "reserved",
      "disabled": "disabled",
      "nonDedicated": "non-dedicated",
      "dedicated": "dedicated",
      "occupied": "occupied"
    },
    "testData": {
      "enterpriseName": "Default Automation Enterprise",
      "enterpriseId": "Custom_Enterprise_ID",
      "adminUserActive": {
        "firstName": "Joe",
        "lastName": "Cotton",
        "email": "joe.cotton@yopmail.com",
        "groupEnterprise": "00gtl9duh2mvM1ddu0h7",
        "groupOperator": "00gtl9gqhkrUYklEG0h7",
        "groupSupport": "00g12gsdb834K3mdK0h8",
        "userId": "00u17hpa1zuOYRVpv0h8"
      },
      "adminUserInactive": {
        "firstName": "Frank",
        "lastName": "CCC",
        "email": "frank.CCC@yopmail.com",
        "group": "00gtl9duh2mvM1ddu0h7",
        "userId": "00u17iwy58ss0JFTm0h8"
      }
    },
    "activeEnterprisesGrid": {
      "enterprisePath": "//*[@role='table']//tr[%s]/td[1]",
      "nidPath": "//*[@role='table']//tr[%s]/td[2]",
      "sapEnterpriseNamePath": "//*[@role='table']//tr[%s]/td[3]",
      "editButtonPath": "//*[@role='table']//tr[%s]/td[4]/button"
    },
    "adminUsersGrid": {
      "namePath": "//*[@role='table']//tr[%s]/td[1]",
      "emailPath": "//*[@role='table']//tr[%s]/td[2]",
      "groupsPath": "//*[@role='table']//tr[%s]/td[3]",
      "statusPath": "//*[@role='table']//tr[%s]/td[4]",
      "assignedEnterprises": "//*[@role='table']//tr[%s]/td[5]",
      "editButton": "//*[@role='table']//tr[1]/td[10]//*[@aria-label='Edit User']",
      "deleteButton": "//*[@role='table']//tr[1]/td[10]//*[@aria-label='Delete User']",
      "ssoAdminUserGrid_UID": "//*[@role='table']//td[1]",
      "ssAdminUserEmail": "//*[@role='table']//td[2]",
      "ssoAdminUserGrid_Status": "//*[@role='table']//td[2]",
      "ssoAdminUserGrid_Role": "//*[@role='table']//td[4]",
      "ssoAdminUserGrid_Location": "//*[@role='table']//td[5]",
      "ssoAdminUserGrid_AccessLevel": "//*[@role='table']//td[7]",
      "ssoAdminPlatformGrid_Status": "//*[@role='table']//td[2]",
      "ssoAdminPlatformGrid_Role": "//*[@role='table']//td[3]",
      "ssoAdminPlatformGrid_AccessLevel": "//*[@role='table']//td[4]"
    },
    "tabToSelect": {
      "addRoleTemplateSubTabs": "//*/div[contains(text(), '%s')]",
      "usersTab": "//*/a[@routerlink='/users']",
      "divisionsLocationsTab": "//*/a[@routerlink='/locations']",
      "stampSheets": "//a[contains(text(), 'Stamp Sheets')]"
    },
    "roletemplateGrid": {
      "roleTemplateName": "//*[@role='table']//tr['Role Template Name']/td[1]",
      "features": "//*[@role='table']//tr['features']/td[2]"
    },
    "miniIcons": {
      "duplicateRoleTemplateIcon": "//*[@aria-label='Duplicate RoleTemplate']",
      "editRoleTemplateIcon": "//*[@aria-label='Edit RoleTemplate']",
      "deleteRoleTemplateIcon": "//*[@aria-label='Delete RoleTemplate']",
      "duplicatePlanIcon": "//*[@aria-label='Duplicate Plan']",
      "editPlanIcon": "//*[@aria-label='Edit Plan']",
      "deletePlanIcon": "//*[@aria-label='Delete Plan']",
      "deleteLocationIcon": "#delete-location",
      "editLocationIcon": "#edit-location",
      "addAccountIcon": "#add-sub-account",
      "editAccountIcon": "#edit-account",
      "deleteAccountIcon": "#delete-account",
      "editContactIcon": "#edit-contact",
      "deleteContactIcon": "#delete-contact",
      "editCustomField": "#edit-custom-field",
      "deleteCustomField": "#delete-custom-field",
      "deleteCustomFieldXpath": "//button[@id='delete-custom-field']",
      "editNotification": "#edit-notification",
      "deleteNotification": "#delete-notification",
      "editRuleset": "#edit-ruleset",
      "deleteRuleset": "#delete-ruleset",
      "notificationCopyLink": "#copy-notification",
      "notificationCloneLink": "#clone-notification",
      "editProductIcon": "#editproduct",
      "deleteProductIcon": "#deleteproduct"
    },
    "planDefinitionGrid": {
      "planName": "//*[@role='table']//tr['Plan Name']//td[1]",
      "features": "//*[@role='table']//tr['features']/td[2]",
      "description": "//*[@role='table']//tr['description']/td[3]",
      "status": "//*[@role='table']//tr['status']/td[4]"
    },
    "toggleSwitch": {
      "platformON": "//*/input[contains(@class,'is-empty')][@id='platform']/../span[@class='switch-handle']",
      "platformOFF": "//*/input[contains(@class,'is-value')][@id='platform']/../span[@class='switch-handle']",
      "clientSetupON": "//*/input[contains(@class,'is-empty')][@id='client-setup']/../span[@class='switch-handle']",
      "clientSetupOFF": "//*/input[contains(@class,'is-value')][@id='client-setup']/../span[@class='switch-handle']",
      "productSupportON": "//*/input[contains(@class,'is-empty')][@id='product']/../span[@class='switch-handle']",
      "productSupportOFF": "//*/input[contains(@class,'is-value')][@id='product']/../span[@class='switch-handle']",
      "clientSandboxON": "//*/input[contains(@class,'is-empty')][@id='client-sandbox']/../span[@class='switch-handle']",
      "clientSandboxOFF": "//*/input[contains(@class,'is-value')][@id='client-sandbox']/../span[@class='switch-handle']"
    },
    "clientUsersGrid": {
      "namePath": "//*[@role='table']//tr[%s]/td[1]/div",
      "emailPath": "//*[@role='table']//tr[%s]/td[2]/div",
      "statusPath": "//*[@role='table']//tr[%s]/td[3]"
    },
    "arrow": {
      "divisionArrow": "#location-by-division",
      "defaultCostAccountArrow": "//*[@id='cost-account-list']//*[@class='ng-arrow-wrapper']"
    },
    "ssoUsersMappingsGrid": {
      "uidColumn": "//tbody/tr/td[1]",
      "accessLevelColumn": "//tbody/tr/td[4]",
      "locationColumn": "//tbody/tr/td[3]",
      "roleColumn": "//tbody/tr/td[2]"
    },
    "locationGrid": {
      "divisionColumn": "//tbody/tr/td[1]",
      "locationNameColumn": "//tbody/tr/td[2]",
      "accNumberColumn": "//tbody/tr/td[3]",
      "addressColumn": "//tbody/tr/td[4]",
      "returnAddressColumn": "//tbody/tr/td[5]"
    }
  }
}
